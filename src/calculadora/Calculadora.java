/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package calculadora;

import static java.lang.Integer.parseInt;

/**
 *
 * @author admin
 */
public class Calculadora extends javax.swing.JFrame {

    /**
     * Creates new form Calculadora
     */
    public Calculadora() {
        initComponents();
    }
    public String valorCampo;
    public int valor;
    public String operador;
    public int resultado;
    int verificador = 1;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblCampo = new javax.swing.JTextField();
        btnClean = new javax.swing.JButton();
        btnExponenciacao = new javax.swing.JButton();
        btnRaiz = new javax.swing.JButton();
        btnDivisao = new javax.swing.JButton();
        btnMultiplicao = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btnSubtracao = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btnadicao = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btnIgualdade = new javax.swing.JButton();
        btnPonto = new javax.swing.JButton();
        btn = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Calculadora");

        lblCampo.setEditable(false);
        lblCampo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lblCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblCampoActionPerformed(evt);
            }
        });

        btnClean.setText("C");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnExponenciacao.setText("X²");
        btnExponenciacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExponenciacaoActionPerformed(evt);
            }
        });

        btnRaiz.setText("√");
        btnRaiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaizActionPerformed(evt);
            }
        });

        btnDivisao.setText("÷");
        btnDivisao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisaoActionPerformed(evt);
            }
        });

        btnMultiplicao.setText("X");
        btnMultiplicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplicaoActionPerformed(evt);
            }
        });

        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btnSubtracao.setText("-");
        btnSubtracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubtracaoActionPerformed(evt);
            }
        });

        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btnadicao.setText("+");
        btnadicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadicaoActionPerformed(evt);
            }
        });

        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btnIgualdade.setText("=");
        btnIgualdade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualdadeActionPerformed(evt);
            }
        });

        btnPonto.setText(".");
        btnPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPontoActionPerformed(evt);
            }
        });

        btn.setText("/");
        btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionPerformed(evt);
            }
        });

        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCampo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExponenciacao, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRaiz, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDivisao, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(btnPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                                            .addComponent(btn7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btn8, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                            .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnadicao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(btnSubtracao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMultiplicao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnIgualdade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDivisao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(btnClean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExponenciacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRaiz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn7, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(btnMultiplicao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(btnSubtracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn1, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(btnadicao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn0, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(btnIgualdade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPonto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblCampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblCampoActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        // TODO add your handling code here:
        lblCampo.setText("");
        valor = 0;
        operador = "";
    }//GEN-LAST:event_btnCleanActionPerformed

    private void btnExponenciacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExponenciacaoActionPerformed
        valorCampo = lblCampo.getText();
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if(!"X".equals(ultimoCaracter) && !"√".equals(ultimoCaracter)
                && !"+".equals(ultimoCaracter) && !"-".equals(ultimoCaracter)
                && !"/".equals(ultimoCaracter) && !"²".equals(ultimoCaracter) 
                && !"√".equals(ultimoCaracter) ){
            operador = "²";
            lblCampo.setText(valorCampo+operador);
            resultado = valor * valor;
            
            lblCampo.setText(String.valueOf(resultado));
        }else{}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExponenciacaoActionPerformed

    private void btnRaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaizActionPerformed
        valorCampo = lblCampo.getText();
        
        if("".equals(valorCampo)){
            operador = "√";
            lblCampo.setText(valorCampo+operador);
        }else{}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRaizActionPerformed

    private void btnDivisaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisaoActionPerformed
        valorCampo = lblCampo.getText();
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if(!"X".equals(ultimoCaracter) && !"√".equals(ultimoCaracter)
                && !"+".equals(ultimoCaracter) && !"-".equals(ultimoCaracter)
                && !"/".equals(ultimoCaracter) && !"²".equals(ultimoCaracter) 
                && !"√".equals(ultimoCaracter) ){
            operador = "/";
            lblCampo.setText(valorCampo+operador);
        }else{}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDivisaoActionPerformed

    private void btnMultiplicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplicaoActionPerformed
        valorCampo = lblCampo.getText();
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if(!"X".equals(ultimoCaracter) && !"√".equals(ultimoCaracter)
                && !"+".equals(ultimoCaracter) && !"-".equals(ultimoCaracter)
                && !"/".equals(ultimoCaracter) && !"²".equals(ultimoCaracter) 
                && !"√".equals(ultimoCaracter) ){
            operador = "X";
            lblCampo.setText(valorCampo+operador);
        }else{}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMultiplicaoActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
if(valor>0){
        
        }else{
            valor+=8;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 8;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"8");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 8;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                System.out.println("a");
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor - valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.8);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*8;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-8;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+8;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/8;
            verificador = 2;
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        if(valor>0){
        
        }else{
            valor+=9;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 9;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"9");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 9;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.9);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*9;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-9;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+9;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/9;
            verificador = 2;
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        if(valor>0){
        
        }else{
            valor+=7;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 7;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"7");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 7;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.7);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*7;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-7;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+7;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/7;
            verificador = 2;
        }
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void btnSubtracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubtracaoActionPerformed
        valorCampo = lblCampo.getText();
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if(!"X".equals(ultimoCaracter) && !"√".equals(ultimoCaracter)
                && !"+".equals(ultimoCaracter) && !"-".equals(ultimoCaracter)
                && !"/".equals(ultimoCaracter) && !"²".equals(ultimoCaracter) 
                && !"√".equals(ultimoCaracter) ){
            operador = "-";
            lblCampo.setText(valorCampo+operador);
        }else{}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSubtracaoActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        if(valor>0){
        
        }else{
            valor+=5;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 5;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"5");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 5;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.5);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*5;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-5;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+5;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/5;
            verificador = 2;
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        if(valor>0){
        
        }else{
            valor+=6;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 6;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"6");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 6;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.6);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*6;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-6;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+6;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/6;
            verificador = 2;
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        if(valor>0){
        
        }else{
            valor+=4;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 4;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"4");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 4;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.4);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*4;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-4;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+4;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/4;
            verificador = 2;
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn4ActionPerformed

    private void btnadicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadicaoActionPerformed
        valorCampo = lblCampo.getText();
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if(!"X".equals(ultimoCaracter) && !"√".equals(ultimoCaracter)
                && !"+".equals(ultimoCaracter) && !"-".equals(ultimoCaracter)
                && !"/".equals(ultimoCaracter) && !"√".equals(ultimoCaracter) ){
            operador = "+";
            lblCampo.setText(valorCampo+operador);
        }else{}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnadicaoActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        if(valor>0){
        
        }else{
            valor+=2;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 2;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"2");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 2;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.2);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*2;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-2;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+2;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/2;
            verificador = 2;
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        if(valor>0){
        
        }else{
            valor+=3;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 3;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"3");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 3;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.3);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*3;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-3;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+3;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/3;
            verificador = 2;
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        if(valor>0){
        
        }else{
            valor+=1;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 1;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"1");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 1;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.1);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*1;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-1;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+1;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/1;
            verificador = 2;
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn1ActionPerformed

    private void btnIgualdadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualdadeActionPerformed

        lblCampo.setText(String.valueOf(resultado));
        // TODO add your handling code here:
    }//GEN-LAST:event_btnIgualdadeActionPerformed

    private void btnPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPontoActionPerformed
        // TODO add your handling code here:
        valorCampo = lblCampo.getText();
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if(!"X".equals(ultimoCaracter) && !"√".equals(ultimoCaracter)
                && !"+".equals(ultimoCaracter) && !"-".equals(ultimoCaracter)
                && !"/".equals(ultimoCaracter) && !"√".equals(ultimoCaracter) ){
            operador = ".";
            lblCampo.setText(valorCampo+operador);
        }else{}
    }//GEN-LAST:event_btnPontoActionPerformed

    private void btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        if(valor>0){
        
        }else{
            valor+=0;
        }
        valorCampo = lblCampo.getText();
        
        if(verificador == 2){
            valor = 0;
        }
        verificador = 1;
        
        
        lblCampo.setText(valorCampo+"0");
        
        if(valorCampo.length()>0){
        
        String ultimoCaracter = valorCampo.substring(valorCampo.length() - 1);
        
        if("0".equals(ultimoCaracter)
                || "1".equals(ultimoCaracter)
                || "2".equals(ultimoCaracter)
                || "3".equals(ultimoCaracter)
                || "4".equals(ultimoCaracter)
                || "5".equals(ultimoCaracter)
                || "6".equals(ultimoCaracter)
                || "7".equals(ultimoCaracter)
                || "8".equals(ultimoCaracter)
                || "9".equals(ultimoCaracter)){
            int valorAdicional = 0;
            
            int verificadorMultiplicacao = valorCampo.indexOf("X");
            int verificadorDivisao= valorCampo.indexOf("/");
            int verificadorAdicao = valorCampo.indexOf("+");
            int verificadorSubtracao = valorCampo.indexOf("-");
            int verificadorRadiciacao = valorCampo.indexOf("√");
            
            if(verificadorMultiplicacao == -1 && verificadorDivisao == -1 &&
                    verificadorAdicao == -1 && verificadorSubtracao == -1){
                valor = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
            }
            else if(verificadorMultiplicacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor * valorComposto;
                
                resultado = valor;
            }
            else if(verificadorDivisao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor / valorComposto;
                
                resultado = valor;
            }
            else if(verificadorSubtracao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }
            else if(verificadorAdicao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                
                valor = valor + valorComposto;
                
                resultado = valor;
            }else if(verificadorRadiciacao != -1){     
                int valorComposto;
                
                valorComposto = Integer.valueOf(String.valueOf(valor) + String.valueOf(valorAdicional));
                resultado = (int) Math.sqrt(valorComposto);
            }
        }
        if(".".equals(ultimoCaracter)){
            valor = (int) (float) (valor + 0.0);
        }
        if("√".equals(ultimoCaracter)){
            resultado = (int) Math.sqrt(valor);
        }
        if("X".equals(ultimoCaracter)){
            resultado = valor*0;
            valor=resultado;
            verificador = 2;
        }
        if("-".equals(ultimoCaracter)){
            resultado = valor-0;
            verificador = 2;
        }
        if("+".equals(ultimoCaracter)){
            resultado = valor+0;
            verificador = 2;
        }
        if("/".equals(ultimoCaracter)){
            resultado = valor/0;
            verificador = 2;
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn0ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn;
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnDivisao;
    private javax.swing.JButton btnExponenciacao;
    private javax.swing.JButton btnIgualdade;
    private javax.swing.JButton btnMultiplicao;
    private javax.swing.JButton btnPonto;
    private javax.swing.JButton btnRaiz;
    private javax.swing.JButton btnSubtracao;
    private javax.swing.JButton btnadicao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField lblCampo;
    // End of variables declaration//GEN-END:variables
}
